allprojects{
	apply plugin : "java"
	apply plugin : "eclipse"
	apply plugin : "maven-publish"
	
    ext {
    	// 
    	profile=project.hasProperty('profile')? (project['profile']==""?"cv-dev":project['profile']) : "cv-dev"
        moduleVersion = "1.0-SNAPSHOT"
        baseVersion = "1.0-SNAPSHOT"
        builtBy = "gradle 2.2"
        publishUserName = "admin"
        publishUserPassword = "123456"
        publishURL = "http://127.0.0.1:18081/repository/maven-snapshots/"
        mavenPublicURL = "http://127.0.0.1:18081/repository/maven-public/"
        
        // 阿里私服
        // mavenPublicURL = "http://maven.aliyun.com/nexus/content/groups/public"
        // maven { url "http://127.0.0.1:18081/repository/maven-public/"} 
    }
    
    compileJava.dependsOn clean
    sourceCompatibility = 1.7
    
    configurations.all {
    	// 检查远程依赖是否存在更新
	    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	    
	    // 采用动态版本声明的依赖缓存
	    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
	}
	
	// api分组
	group = "com.clover.dubbo"
}

subprojects {
	// 设置编码
	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
	
	repositories { maven { url mavenPublicURL } }
	
	// 源文件
	sourceSets {
        main {
            java {
                srcDirs = [
                        'src/main/java'
                ]
            }
            resources { srcDirs = ['src/main/resources']}
        }
        test {
            java {
                srcDirs = [
                        'src/test/java'
                ]
            }
            resources { srcDirs = ['src/test/resources']}
        }
    }
}

project("clover-dubbo-srv-api") {
    project.ext {
        appName = "clover-dubbo-srv-api"
        apiDir =  "src/main/java/com/clover/dubbo/api/"
    }

    jar {
        baseName appName
        version moduleVersion
        manifest {
            attributes 'packageName': appName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
        }
    }
    publish.dependsOn build
}

project("clover-dubbo-srv-core") {
    project.ext { appName = "clover-dubbo-srv-core" }

    jar {
        baseName appName
        version moduleVersion
        include "com/clover/dubbo/*/**"
        manifest {
            attributes 'packageName': appName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
        }
    }
}

jar {
    baseName baseName
    version moduleVersion
    destinationDir file("$buildDir/m-libs/")
    manifest {
        attributes 'packageName': baseName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
    }
}

configure(subprojects) { subproject ->
    task sourcesJar(type: Jar, dependsOn:classes) { from sourceSets.main.output }
    artifacts { archives sourcesJar }
}
task copySubProjectsJar(type: Copy) {
    subprojects.each { subproject ->
        from subproject.jar
        destinationDir file("$buildDir/libs/core-libs")
    }
}
task copy3rdJars(type: Copy) {
    subprojects.each { subproject ->
        from subproject.configurations.runtime
        exclude "user-api-*.*"
        destinationDir file("$buildDir/libs/3rd-libs")
    }
}

task copySubProjectsConfig(type: Copy) {
    subprojects.each { subproject ->
        from subproject.fileTree(dir: 'src/main/resources')+subproject.fileTree(dir: 'profile/'+profile)
        destinationDir file("$buildDir/config")
    }
}

task zipLibs(type: Zip) {
    baseName "libs"
    from "$buildDir/libs"
}

task zipConfig(type: Zip) {
    baseName "config"
    from "$buildDir/config"
}


build.dependsOn copySubProjectsJar,copy3rdJars,copySubProjectsConfig